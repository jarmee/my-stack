name: deploy

on:
  push:
    branches:
      - "main"
      - "develop"
      - "feature/deployment" # FIXME

env:
  REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  deploy-api:
    runs-on: ubuntu-latest
    env:
      APP_NAME: my-stack-api
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version-file: '.nvmrc'

      - name: Cache Node Modules
        uses: actions/cache@v3
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: 'node_modules'
          key: node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        run: npm ci

      - name: Build
        uses: mansagroup/nrwl-nx-action@v3
        with:
          projects: api
          targets: build

      - name: Log in to the Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata (Tags, Labels) For Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.APP_NAME }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: apps/${{ env.APP_NAME }}/Dockerfile

  deploy-client:
    runs-on: ubuntu-latest
    env:
      APP_NAME: my-stack-client
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version-file: '.nvmrc'

      - name: Cache Node Modules
        uses: actions/cache@v3
        id: cache
        env:
          cache-name: cache-node-modules
        with:
          path: 'node_modules'
          key: node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        run: npm ci

      - name: Build
        uses: mansagroup/nrwl-nx-action@v3
        with:
          projects: client
          targets: build

      - name: Log in to the Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata (Tags, Labels) For Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.APP_NAME }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: apps/${{ env.APP_NAME }}/Dockerfile